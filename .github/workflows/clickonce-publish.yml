name: Publish ClickOnce

on:
  push:
    tags:
      - '[0-9]+.*'  # Aciona no push de tags, por exemplo: 1.5.4

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      # 1. Fazer o checkout do código do repositório
      - name: Checkout repository
        uses: actions/checkout@v4  # Usando a versão mais recente

      # 2. Cache de pacotes NuGet para melhorar a performance
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # 3. Instalar o .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 4. Restaurar pacotes NuGet (caminho relativo à pasta src)
      - name: Restore NuGet packages
        run: dotnet restore ./src/SGI.csproj

      # 5. Compilar o projeto (caminho relativo à pasta src)
      - name: Build the project
        run: dotnet build ./src/SGI.csproj --configuration ${{ matrix.configuration }}

      # 6. Corrigir e validar código (analisar e corrigir formatação)
      - name: Format and analyze code with .NET CLI
        run: dotnet format ./src/SGI.csproj --fix-whitespace --verify-no-changes

      # 7. Publicar ClickOnce **somente se for Release**
      - name: Publish ClickOnce (Release only)
        if: ${{ matrix.configuration == 'Release' }}  # Somente publica se for Release
        run: dotnet publish ./src/SGI.csproj --configuration Release --output ./src/publish

      # 8. Compactar os arquivos em publish.zip **somente se for Release**
      - name: Zip publish folder (Release only)
        if: ${{ matrix.configuration == 'Release' }}  # Somente compacta se for Release
        run: Compress-Archive -Path ./src/publish/* -DestinationPath ./src/publish/publish.zip

      # 9. Fazer upload do publish.zip para os artefatos do GitHub **somente se for Release**
      - name: Upload installer (Release only)
        if: ${{ matrix.configuration == 'Release' }}  # Somente faz upload se for Release
        uses: actions/upload-artifact@v4
        with:
          name: ClickOnce
          path: ./src/publish/publish.zip

      # 10. Criar uma nova release no GitHub **somente se for Release**
      - name: Create GitHub release (Release only)
        if: ${{ matrix.configuration == 'Release' }}  # Somente cria release se for Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./src/publish/publish.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 11. Notificar o Discord (alerta de sucesso)
      - name: Send Discord notification (success)
        if: ${{ success() && matrix.configuration == 'Release' }}  # Notifica apenas em Release e sucesso
        run: |
          $webhookUrl = '${{ secrets.DISCORD_WEBHOOK_URL }}'
          $message = '{"content": "✅ Build and release successful for SGI (Release) on branch ''${{ github.ref_name }}''!"}'
          curl -H "Content-Type: application/json" -X POST -d $message $webhookUrl

      # 12. Notificar o Discord (alerta de falha)
      - name: Send Discord notification (failure)
        if: ${{ failure() }}
        run: |
          $webhookUrl = '${{ secrets.DISCORD_WEBHOOK_URL }}'
          $message = '{"content": "❌ Build failed for SGI on branch ''${{ github.ref_name }}''!"}'
          curl -H "Content-Type: application/json" -X POST -d $message $webhookUrl
